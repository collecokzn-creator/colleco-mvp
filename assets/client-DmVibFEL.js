const c=typeof window<"u"?`${window.location.origin}/api`:"http://localhost:4000/api";async function y(e){const t=await fetch(`${c}/bookings`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok){const o=(t.headers.get("content-type")||"").includes("application/json")?await t.json():await t.text(),a=new Error("Failed to create booking");throw a.status=t.status,a.body=o,a}return t.json()}async function u(e){if(!e)throw new Error("Missing booking id");const t=await fetch(`${c}/bookings/${encodeURIComponent(e)}`);if(!t.ok){const s=await t.text(),o=new Error("Failed to fetch booking");throw o.status=t.status,o.body=s,o}return t.json()}async function p({hotelName:e,nights:t,unitPrice:s,currency:o="USD",customer:a={},metadata:i={}}){const n=await fetch(`${c}/bookings/accommodation`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hotelName:e,nights:t,unitPrice:s,currency:o,customer:a,metadata:i})});if(!n.ok){const h=(n.headers.get("content-type")||"").includes("application/json")?await n.json():await n.text(),r=new Error("Failed to create accommodation booking");throw r.status=n.status,r.body=h,r}return n.json()}async function b({roomType:e="standard",startDate:t,endDate:s}){const o=new URL(`${c.replace(/\/api$/,"")}/api/accommodation/availability`);e&&o.searchParams.set("roomType",e),t&&o.searchParams.set("startDate",t),s&&o.searchParams.set("endDate",s);const a=await fetch(o.toString());if(!a.ok){const i=await a.text(),n=new Error("Failed to check availability");throw n.status=a.status,n.body=i,n}return a.json()}async function g({roomType:e="standard",startDate:t,endDate:s,qty:o=1,holdMinutes:a=10}){const i=await fetch(`${c}/accommodation/hold`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({roomType:e,startDate:t,endDate:s,qty:o,holdMinutes:a})});if(!i.ok){const n=await i.text(),d=new Error("Failed to create hold");throw d.status=i.status,d.body=n,d}return i.json()}async function k({from:e,to:t,date:s,price:o,currency:a="USD",customer:i={},metadata:n={},flightNumber:d,returnFlight:h}){const r=await fetch(`${c}/bookings/flight`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({from:e,to:t,date:s,price:o,currency:a,customer:i,metadata:n,flightNumber:d,returnFlight:h})});if(!r.ok){const w=(r.headers.get("content-type")||"").includes("application/json")?await r.json():await r.text(),l=new Error("Failed to create flight booking");throw l.status=r.status,l.body=w,l}return r.json()}async function m({vehicleType:e,days:t=1,pricePerDay:s,currency:o="USD",customer:a={},metadata:i={}}){const n=await fetch(`${c}/bookings/car`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({vehicleType:e,days:t,pricePerDay:s,currency:o,customer:a,metadata:i})});if(!n.ok){const h=(n.headers.get("content-type")||"").includes("application/json")?await n.json():await n.text(),r=new Error("Failed to create car booking");throw r.status=n.status,r.body=h,r}return n.json()}async function j(e){if(!e)throw new Error("Missing flight item id");const t=await fetch(`${c}/flights/${encodeURIComponent(e)}`);if(!t.ok){const s=await t.text(),o=new Error("Failed to fetch flight");throw o.status=t.status,o.body=s,o}return t.json()}function S(e,t={role:"client"}){if(typeof window>"u"||!window.EventSource)return{close:()=>{}};const s=typeof window<"u"?`${window.location.origin}/api`:"http://localhost:4000/api",o=new URL(`${s.replace(/\/api$/,"")}/events`);t.role&&o.searchParams.set("role",t.role);const a=new EventSource(o.toString());return a.addEventListener("flight.updated",i=>{try{const n=JSON.parse(i.data);e&&e(n)}catch{}}),{close:()=>a.close()}}export{m as a,p as b,k as c,u as d,y as e,b as f,j as g,g as h,S as s};
